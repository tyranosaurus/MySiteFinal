<?xml version="1.0" encoding="UTF-8" ?> <!-- sql 매핑 파일 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="guestbook"> <!-- 동일한 쿼리문 삽입시 namespace를 사용하여 구별한다. -->
	<select id="selectByNo" resultType="guestbookvo" parameterType="long">
		select no,
		name,
		date_format(reg_date, '%Y-%m-%d %h:%i:%s') as regDate,
		message,
		passwd
		from guestbook
		where no= #{no}
	</select>


	<select id="selectList" resultType="guestbookvo"><!-- vo변수명과 DB의 칼럼명이 다르면 as를 이용하여 
			VO의 이름과 일치시켜 준다. --> 
		<![CDATA[
		select no,
		       name, 
		       date_format(reg_date, '%Y-%m-%d %h:%i:%s') as regDate,  
		       message 
		from guestbook 
		order by no desc
		]]> <!-- <![CDATA[]]> 이거 써주는게 좋음. 이 괄호안에 있는거는 태그처럼 해석하지 말고 문자 그대로 해석하라는 뜻. 예를들어 
			1 < no 이런거를 태그가 아닌 콘텐츠(문자)로 해석하게 해준다. CDATA 콘텐츠 데이터 라는 뜻. -->
	</select>
	
	
	<select id="selectList2" resultType="guestbookvo" parameterType="int">
		
		select no, 
		       name, 
		       date_format(reg_date, '%Y-%m-%d %h:%i:%s') as regDate, 
		       message 
		from guestbook 
		order by no desc 
		limit #{p},5

	</select>
	
	

	<insert id="insert" parameterType="guestbookvo"> <!-- 인자로 넘겨주는 놈의 타입 -->
		<![CDATA[
			insert into guestbook values(null, #{name}, now(), #{message}, password(#{password}))
		]]>
			<!-- 인자로 받은 vo의 name, message, password를 #{}안에 넣어준다. -->
		<selectKey keyProperty="no" resultType="long" order="AFTER">
			select last_insert_id() <!-- selectKey에서는 인서트한 데이터의 no를 뽑아 이 쿼리의 결과가 insert의 vo객체에 프라이머리키로 들어간다. -->
		</selectKey>  <!-- 얘는 키값만 골라낼 수 있다. 키값(프라이머리)만 뽑아서 보내준다. -->

	</insert>

	<delete id="delete" parameterType="guestbookvo"> <!-- parameterType은 객체 하나만 받을 수 있다. -->
		delete
		from guestbook
		where no = #{no}
		and passwd = password(#{password})
	</delete>

	<delete id="delete2" parameterType="map"> 
		delete
		from guestbook
		where no = #{no}
		and passwd = password(#{password})
	</delete>

</mapper>
